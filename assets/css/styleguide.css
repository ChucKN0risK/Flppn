@charset "UTF-8";
body::before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100; }
  @media (min-width: 15.625em) {
    body::before {
      content: "mobile ≥ 250px (15.625em)"; } }
  @media (min-width: 30em) {
    body::before {
      content: "mobileLandscape ≥ 480px (30em)"; } }
  @media (min-width: 46.25em) {
    body::before {
      content: "tablet ≥ 740px (46.25em)"; } }
  @media (min-width: 61.25em) {
    body::before {
      content: "desktop ≥ 980px (61.25em)"; } }
  @media (min-width: 81.25em) {
    body::before {
      content: "wide ≥ 1300px (81.25em)"; } }

/*
 * Normalization
 */
audio:not([controls]) {
  display: none; }

button {
  overflow: visible;
  -webkit-appearance: button; }

details {
  display: block; }

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

input {
  -webkit-border-radius: 0; }
  input[type="button"], input[type="reset"], input[type="submit"] {
    -webkit-appearance: button; }
  input[type="number"] {
    width: auto; }
  input[type="search"] {
    -webkit-appearance: textfield; }
    input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
      -webkit-appearance: none; }

main {
  display: block; }

pre {
  overflow: auto; }

progress {
  display: inline-block; }

small {
  font-size: 75%; }

summary {
  display: block; }

svg:not(:root) {
  overflow: hidden; }

template {
  display: none; }

textarea {
  overflow: auto; }

[hidden] {
  display: none; }

/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit; }

* {
  font-size: inherit;
  line-height: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

/*
 * Opinionated defaults
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0; }

* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0; }

:root {
  background-color: #FFFFFF;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font: 100% / 1.5 sans-serif;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

button,
input,
select,
textarea {
  background-color: transparent; }

button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit; }

button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

nav ol,
nav ul {
  list-style: none; }

select {
  -moz-appearance: none;
  -webkit-appearance: none; }
  select::-ms-expand {
    display: none; }
  select::-ms-value {
    color: currentColor; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  resize: vertical; }

::-moz-selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

::selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden="false"]:focus {
    clip: auto; }

/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */
html {
  overflow-y: scroll;
  /* [1] */
  min-height: 100%;
  /* [2] */
  -webkit-text-size-adjust: 100%;
  /* [3] */
  -ms-text-size-adjust: 100%;
  /* [3] */
  font-family: "Open Sans", Arial, sans-serif, serif;
  font-size: 100%;
  font-weight: 400;
  margin: 0 auto;
  text-align: left; }

body,
html {
  width: 100%;
  margin: 0;
  color: #171717; }

body {
  font-size: 1em;
  position: relative;
  font-family: "Open Sans", Arial, sans-serif !important; }
  @media screen and (min-width: 46.25em) {
    body {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    body {
      font-size: 1em; } }
  @media (min-width: 15.625em) and (max-width: 61.24em) {
    body.has-navbar {
      padding-top: calc(4.5rem + 3rem); } }
  @media (min-width: 61.25em) {
    body.has-navbar {
      padding-top: calc(4.5rem + 4rem); } }

h1,
h2,
h3,
h4,
h5,
h6 {
  -webkit-transition: all 0.2s cubic-bezier(0.165, 0.84, 0.44, 1);
          transition: all 0.2s cubic-bezier(0.165, 0.84, 0.44, 1);
  line-height: 1.2;
  margin-bottom: 1rem; }

h1 {
  font-size: 2.0625em; }
  @media screen and (min-width: 46.25em) {
    h1 {
      font-size: 2.4375em; } }
  @media screen and (min-width: 61.25em) {
    h1 {
      font-size: 3.1875em; } }

h2 {
  font-size: 1.75em; }
  @media screen and (min-width: 46.25em) {
    h2 {
      font-size: 1.9375em; } }
  @media screen and (min-width: 61.25em) {
    h2 {
      font-size: 2.375em; } }

h3 {
  font-size: 1.4375em; }
  @media screen and (min-width: 46.25em) {
    h3 {
      font-size: 1.5625em; } }
  @media screen and (min-width: 61.25em) {
    h3 {
      font-size: 1.75em; } }

h4 {
  font-size: 1.1875em; }
  @media screen and (min-width: 46.25em) {
    h4 {
      font-size: 1.25em; } }
  @media screen and (min-width: 61.25em) {
    h4 {
      font-size: 1.3125em; } }

h5 {
  font-size: 1em; }
  @media screen and (min-width: 46.25em) {
    h5 {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    h5 {
      font-size: 1em; } }

p,
a,
ul,
blockquote,
figcaption,
button {
  font-family: "Open Sans", Arial, sans-serif; }

img {
  height: auto;
  width: 100%; }

button {
  cursor: pointer; }

::-moz-selection {
  background: #1894c4;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #1894c4;
  color: #fff;
  text-shadow: none; }

i {
  text-decoration: none; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

p.error {
  color: #e65c5c; }

/* ==|====================
   Fonts
   ======================= */
.styleguide__title {
  text-align: center;
  margin: 3rem 0; }

.styleguide__section {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 1rem 0;
  overflow: hidden; }
  .styleguide__section:last-child {
    padding-bottom: 0; }

.styleguide__section__title {
  text-align: center;
  margin-bottom: 1rem;
  color: #aaaab1; }
  .styleguide__section__title a {
    text-align: center; }

.styleguide__section__item {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }
  .styleguide__section__item--spaced {
    -webkit-flex-flow: row wrap;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around; }
  .styleguide__section__item--cards {
    -webkit-flex-flow: row wrap;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around;
    padding: 0 5rem; }
  .styleguide__section__item--typography, .styleguide__section__item--buttons {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
    .styleguide__section__item--typography .btn, .styleguide__section__item--buttons .btn {
      margin-bottom: 1rem; }

.styleguide__section__item--typography {
  margin: 0 auto; }
  @media (min-width: 15.625em) and (max-width: 46.24em) {
    .styleguide__section__item--typography {
      padding: 0 1rem; } }
  @media (min-width: 46.25em) and (max-width: 61.24em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 35rem; } }
  @media (min-width: 61.25em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 45rem; } }

.headings,
.text-wrapper,
.lists {
  margin-bottom: 2rem; }

.text-wrapper p {
  line-height: 1.5; }

@media (min-width: 15.625em) and (max-width: 61.24em) {
  .text-wrapper p + p {
    margin-bottom: 1rem; } }

@media (min-width: 61.25em) {
  .text-wrapper p + p {
    margin-bottom: 1.5rem; } }

.text-wrapper--thin {
  font-weight: 200; }
  .text-wrapper--thin h5 {
    font-weight: 600; }

.paragraph__subtitle {
  margin-bottom: .5rem;
  margin-top: 1.5rem; }
  .paragraph__subtitle:first-child > p {
    font-weight: normal; }

.lists {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  width: 100%; }
  @media (min-width: 30em) {
    .lists {
      -webkit-box-pack: start;
      -webkit-justify-content: flex-start;
          -ms-flex-pack: start;
              justify-content: flex-start; }
      .lists .list-wrapper {
        margin-right: 2rem; } }

.links {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  width: 100%; }

.styleguide__section__item--media .service-pros {
  margin-bottom: 2rem; }

.styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) {
  background-color: #fbfbfb; }
  .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__title {
    color: #1894c4; }
  .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__figure {
    margin-right: 0; }
    @media (min-width: 61.25em) {
      .styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(odd) .media__figure {
        -webkit-box-ordinal-group: 2;
        -webkit-order: 1;
            -ms-flex-order: 1;
                order: 1;
        margin-left: 1rem; } }

.styleguide__section__item--media .service-presentation .media--presentation-item:nth-child(even) .media__title {
  color: #e65c5c; }

.styleguide__section__item--media .teams-wrapper {
  margin: auto; }
  @media (min-width: 46.25em) and (max-width: 81.24em) {
    .styleguide__section__item--media .teams-wrapper {
      width: 80%; } }
  @media (min-width: 81.25em) {
    .styleguide__section__item--media .teams-wrapper {
      max-width: 65rem; } }

.styleguide__section__item--form {
  max-width: 30rem;
  margin: auto; }
  .styleguide__section__item--form .input-wrapper,
  .styleguide__section__item--form .checkbox-wrapper,
  .styleguide__section__item--form select {
    margin-bottom: 1rem; }
  .styleguide__section__item--form .radio-wrapper {
    margin-bottom: .5rem; }

.styleguide__section__item--alert {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .styleguide__section__item--alert .alert,
  .styleguide__section__item--alert .alert--success,
  .styleguide__section__item--alert .alert--error {
    margin-bottom: 1rem; }

.styleguide__section__item--footer {
  margin-top: 2rem; }

/*# sourceMappingURL=data:application/json;base64, */
